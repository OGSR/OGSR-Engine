#include "common.h"
#include "ogse_functions.h"

#define SS_DUST_SPEED float(0.4)		// скорость частиц пыли 
#define SS_DUST_INTENSITY float(2.0)	// яркость пылинок
#define SS_DUST_DENSITY float(1.0)		// плотность частиц пыли 
#define SS_DUST_SIZE float(0.7)			// размер пылинок

uniform float4 screen_res; // Screen resolution (x-Width,y-Height, zw - 1/resolution)

uniform float4 ssss_params;		// x - exposure, y - density
uniform sampler2D jitter0;
uniform sampler2D jitter1;
uniform sampler2D jitter_hq;
uniform sampler2D s_sun_shafts; // current sunshafts texture

float4 main(p_screen I) : COLOR0
{
	// dist to the sun
	float sun_dist = FARPLANE / (sqrt(1.0f - L_sun_dir_w.y * L_sun_dir_w.y));
	// sun pos
	float3 sun_pos_world = sun_dist*L_sun_dir_w + eye_position;
	float4 sun_pos_projected = mul(m_VP, float4(sun_pos_world, 1.0f));
	float4 sun_pos_screen = proj_to_screen(sun_pos_projected)/sun_pos_projected.w;
	// sun-pixel vector
	float2 sun_vec_screen = normalize(sun_pos_screen.xy - I.tc0.xy);
	// smooth shafts
	float4 cSunShafts = tex2D(s_sun_shafts, I.tc0.xy);
	//#ifdef SUN_SHAFTS_QUALITY
	//	#if SUN_SHAFTS_QUALITY > 1
			cSunShafts *= 0.5f;
			cSunShafts += tex2D(s_sun_shafts, I.tc0.xy + sun_vec_screen.yx * screen_res.zw)*0.25f;
			cSunShafts += tex2D(s_sun_shafts, I.tc0.xy - sun_vec_screen.yx * screen_res.zw)*0.25f;
	//	#endif
	//#endif
	float3 img = tex2D(s_image, I.tc0.xy).xyz;

	float dust_size = 8.0f / SS_DUST_SIZE;
	float3 jit;
	float2 jtc = I.tc0.xy;
	float2 sun_dir_e = L_sun_dir_e.xy;
	sun_dir_e /= sin(ogse_c_screen.y);
	sun_dir_e *= ogse_c_screen.x;
	jtc.x += sun_dir_e.x;
	jtc.y -= sun_dir_e.y;
	jtc.x = (jtc.x > 1.0f)?(jtc.x - 1.0f):jtc.x;
	jtc.y = (jtc.y < 0.0f)?(1.0f - jtc.y):jtc.y;
	jit.x = tex2D(jitter0, float2(jtc.x, jtc.y + timers.x*0.01f*SS_DUST_SPEED)*dust_size).x;
	jit.y = tex2D(jitter1, float2(jtc.x + timers.x*0.01f*SS_DUST_SPEED, jtc.y)*dust_size).y;
	jit.z = tex2D(jitter_hq, jtc).x;
	jit.z = saturate(jit.z + SS_DUST_DENSITY - 1);
	float dust = saturate(jit.x*jit.y*jit.z);
	float len = length(dust);
	dust *= SS_DUST_INTENSITY;
	float dep = get_depth(I.tc0.xy);
	if (dep < 0.00001f)
		dep = SKY_DEPTH;
	dust = lerp(0.0f, dust, (1.0f - saturate(dep * 0.2f)) * (1.0f - saturate(is_sky(dep))));
	dust += 1.0f;
	
	float3 Color =  img + cSunShafts.xyz * L_sun_color.xyz * (1.0f - img) * ssss_params.x * dust;
	
	return float4(Color, 1.0f);
}