#include "common.h"
#include "models_detector_cfg.h"

uniform float4x4 ogse_c_artefacts;	// view space artefacts position, xz, two pairs on a row

float calculate_bright	(float2 pos, float2 tc)
{
	float res;
	// intensity
	float dist = distance(pos, float2(0,0));
	res = (ID_DETECTOR_2_DETECT_RADIUS - dist) / ID_DETECTOR_2_DETECT_RADIUS;
	res -= 1.0*step(dist, 0.001);
	// sector
	float2 tc_vec = tc - ID_DETECTOR_2_CENTER;
	tc_vec.y *= -1;
	tc_vec = normalize(tc_vec);
	float2 art_vec = normalize(pos);
	float f = saturate(dot(tc_vec, art_vec) - ID_DETECTOR_2_SECTOR) / (1.0 - ID_DETECTOR_2_SECTOR);
	res *= f;
	return res;
}

float4 main ( p_flat I )  : COLOR
{
	float bright = calculate_bright(float2(ogse_c_artefacts._11, ogse_c_artefacts._21), I.tcdh.xy);
	bright += calculate_bright(float2(ogse_c_artefacts._31, ogse_c_artefacts._41), I.tcdh.xy);
	bright += calculate_bright(float2(ogse_c_artefacts._12, ogse_c_artefacts._22), I.tcdh.xy);
	bright += calculate_bright(float2(ogse_c_artefacts._32, ogse_c_artefacts._42), I.tcdh.xy);
	bright += calculate_bright(float2(ogse_c_artefacts._13, ogse_c_artefacts._23), I.tcdh.xy);
	bright += calculate_bright(float2(ogse_c_artefacts._33, ogse_c_artefacts._43), I.tcdh.xy);
	bright += calculate_bright(float2(ogse_c_artefacts._14, ogse_c_artefacts._24), I.tcdh.xy);
	bright += calculate_bright(float2(ogse_c_artefacts._34, ogse_c_artefacts._44), I.tcdh.xy);

	bright = saturate(bright);
	bright *= (1.f - tex2D(s_base, I.tcdh.xy).a);

	float4 color = lerp(float4(0,0,0,0), ID_DETECTOR_2_COLOR, bright);

	return saturate(color)*ID_DETECTOR_2_POWER;
}
