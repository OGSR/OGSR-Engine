#include "common.h"

// KRodin: TODO: Вынести в common?
uniform float4 screen_res;	// x - width, y - height, z - 1/width, w - 1/height

struct v2p
{
	float2 tc0:TEXCOORD0; // текстурные координаты пикселя (u,v)
	float4 tc1:TEXCOORD1;// экранные координаты текущего пикселя в формате [0..1, 0..1]
};

#define dot_shift 0.5

float4 main(v2p I):COLOR
{
	// вектор частных производных (du/dx, dv/dy) текстурных координат по экранным координатам
	float dtc = float2(ddx(I.tc0.x), ddy(I.tc0.y));
	// текстурные координаты центра прицела u,w == [0.5, 0.5]
	float2 cpos = I.tc1*screen_res.xy + (0.5 - I.tc0) / dtc; // экранные координаты центра прицела

	float2 tc = I.tc0 - (screen_res.xy * 0.5 - cpos) * dot_shift * dtc;
	float4 t_base = tex2D(s_base, tc);
	clip(t_base.a-0.4); // чистим стекло от полупрозрачного фона
	return saturate(t_base);
}
